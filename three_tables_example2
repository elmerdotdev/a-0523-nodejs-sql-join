CREATE DATABASE three_table_example_2;

CREATE TABLE customers (
    customerID SERIAL PRIMARY KEY,
    customerName VARCHAR(100),
    city VARCHAR(100)
);

CREATE TABLE products (
    productID SERIAL PRIMARY KEY,
    productName VARCHAR(100),
    price DECIMAL(10, 2)
);

CREATE TABLE orders (
    orderID SERIAL PRIMARY KEY,
    orderDate DATE,
    customerID INT REFERENCES customers(customerID), -- Adding a foreign key reference to customers table
    productID INT REFERENCES products(productID)
);

-- Inserting data into customers
INSERT INTO customers (customerName, city) VALUES
    ('Alice', 'New York'),
    ('Bob', 'Los Angeles'),
    ('Charlie', 'Chicago');

-- Inserting data into products
INSERT INTO products (productName, price) VALUES
    ('Laptop', 999.99),
    ('Smartphone', 499.99),
    ('Tablet', 299.99);

-- Inserting data into orders
INSERT INTO orders (orderDate, customerID, productID) VALUES
    ('2024-01-20', 1, 2),
    ('2024-01-21', 2, 3),
    ('2024-01-22', 3, 1);

-- INNER JOIN example
SELECT c.customerName, o.orderDate, p.productName
FROM customers c
INNER JOIN orders o ON c.customerID = o.customerID
INNER JOIN products p ON o.productID = p.productID;

-- LEFT JOIN example
SELECT c.customerName, o.orderDate, p.productName
FROM customers c
LEFT JOIN orders o ON c.customerID = o.customerID
LEFT JOIN products p ON o.productID = p.productID;

-- RIGHT JOIN example
SELECT c.customerName, o.orderDate, p.productName
FROM customers c
RIGHT JOIN orders o ON c.customerID = o.customerID
RIGHT JOIN products p ON o.productID = p.productID;

-- FULL JOIN example
SELECT c.customerName, o.orderDate, p.productName
FROM customers c
FULL JOIN orders o ON c.customerID = o.customerID
FULL JOIN products p ON o.productID = p.productID;
